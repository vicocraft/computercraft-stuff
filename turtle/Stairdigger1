local y
local w = 3
local h = 0
local stairSlot = 1

function digStair()
	checkFuel()
	local a = 0
	turtle.dig()
	fwd()
	turtle.turnRight()
	while a < w do
		checkFuel()
		digLane()
		if(a ~= w - 1)
		then
			fwd()
		end
		a = a + 1
	end
end

function fwd()
	while turtle.forward() == false do
		turtle.dig()
	end
end

function up()
	while turtle.up() == false do
		turtle.digUp()
	end
end

function checkStairStock()
	local a = 1
	
	if(turtle.getItemCount(stairSlot) < 4)
	then
		while a < 16 do
			turtle.select(a)
			if(turtle.compareTo(stairSlot))
			then
				turtle.transferTo(stairSlot, turtle.getItemSpace(stairSlot))
			end
			a = a + 1
		end
	end
end

function digLane()
	checkStairStock()
	checkFuel()
	turtle.digUp()
	
	local b = 3
	while b < h do
		turtle.digDown()
		turtle.down()
		b = b + 1
	end
	turtle.digDown()
	turtle.turnRight()
	turtle.select(stairSlot)
	turtle.placeDown()
	turtle.turnLeft()
	
	while b > 3 do
		up()
		b = b - 1
	end
end

function checkFuel()
	if(turtle.getFuelLevel() < 5)
	then
		turtle.select(16)
		turtle.refuel(2)
		turtle.select(1)
	end
end


function getBack()
	checkFuel()
	local a = w - 1
	turtle.turnLeft()
	turtle.turnLeft()
	while a > 0 do
		checkFuel()
		turtle.forward()
		a = a - 1
	end
	turtle.turnRight()
	turtle.down()
end

function setup()
	checkFuel()
	
	print("Enter the number of layers to cover")
	y = tonumber(io.read())
	
	print("Enter the height of the staircase (h > 2)")
	while h < 3 do
		h = tonumber(io.read())
	end
	
	up()
end

setup()

while y > 0 do
	digStair()
	getBack()
	y = y - 1
end